@page "/posts"
@inject NavigationManager UriHelper

@using Posts
@using System.Collections
@using System.Collections.Generic
@using System.Reflection
@using DataService


<div style="border:1px solid black">
    @foreach (var post in posts)
    {
        @if (post.FullName != "Posts.IPostMetadata" && 
             post.FullName != "Posts.PostMetadata" &&
             post.FullName != "Posts.Post")
        {
            dynamic currentPost = Activator.CreateInstance(post);

            <div class="card-container"  @onclick=@(e => UriHelper.NavigateTo("Posts/" + post.Name))>
                <div>
                    <div class="card-image-container">
                        <img class="card-image" src="@currentPost.postMetadata.ImageLink" />
                    </div>
                    <div class="card-metadata-container">
                        <h1 class="card-title">@currentPost.postMetadata.Title</h1>
                        <h3 class="card-subheading">@currentPost.postMetadata.SubHeading</h3>
                        <span class="card-date">@currentPost.postMetadata.Date</span>
                        <span class="card-category">@currentPost.postMetadata.Category</span>
                        @*<span class="card-author">@currentPost.postMetadata.Author</span>*@
                    </div>
                </div>
                @*<div>
                    <h5>@post.Name</h5>
                    <h3>@post.TestTitle</h3>
                    <h5>@post.TestSubHeading</h5>
                </div>*@
                @*<button type="button" @onclick=@(e => UriHelper.NavigateTo(post.Name))>Read Post</button>*@
            </div>
        }
    }
</div>

@code {

    IEnumerable<Type> posts = Assembly
            .GetExecutingAssembly()
            .GetTypes()
            .Where(t => t.Namespace.Equals("Posts"))
            .OrderBy(x => x.Name);

    //List<(TestPost1> testPosts = DataService.PostsService.GetPosts();

}
